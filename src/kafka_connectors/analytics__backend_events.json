{
	"connector.class": "io.debezium.connector.postgresql.PostgresConnector",
	"slot.name": "backend_events_slot",
	"publication.name": "analytics_publication",
	"signal.enabled.channels": "source,kafka",
	"tombstones.on.delete": "false",
	"topic.prefix": "analytics.backend",
	"heartbeat.action.query": "INSERT INTO public.dbz_heartbeat (id, ts) VALUES (1, NOW()) ON CONFLICT(id) DO UPDATE SET ts=EXCLUDED.ts;",
	"signal.data.collection": "public.dbz_signal",
	"value.converter": "org.apache.kafka.connect.json.JsonConverter",
	"key.converter": "org.apache.kafka.connect.json.JsonConverter",
	"publication.autocreate.mode": "filtered",
	"database.user": "airflow",
	"database.dbname": "analytics",
	"signal.kafka.bootstrap.servers": "kafka:29092",
	"signal.kafka.topic": "analytics.signal",
	"database.server.name": "postgres",
	"heartbeat.interval.ms": "10000",
	"plugin.name": "pgoutput",
	"database.port": "5432",
	"key.converter.schemas.enable": "false",
	"database.hostname": "postgres",
	"database.password": "airflow",
	"value.converter.schemas.enable": "false",
	"name": "backend_events",
	"include.before.state": "true",
	"table.include.list": "public.dbz_signal,public.dbz_heartbeat,public.backend_events",
	"snapshot.mode": "no_data"
}